DROP SCHEMA IF EXISTS cinema;

CREATE SCHEMA cinema;

CREATE TABLE cinema.USER
(
  ID       INT          NOT NULL AUTO_INCREMENT,
  LOGIN    NVARCHAR(50) NOT NULL,
  PASSWORD NVARCHAR(50) NOT NULL,
  ROLE_ID  INT          NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE cinema.USER_ROLE
(
  ID        INT NOT NULL,
  ROLE_NAME NVARCHAR(50),
  PRIMARY KEY (ID)
);

ALTER TABLE cinema.USER
  ADD CONSTRAINT FK_USER_1
    FOREIGN KEY (ROLE_ID)
      REFERENCES cinema.USER (ID)
      ON DELETE CASCADE ON UPDATE CASCADE
;

CREATE TABLE cinema.MOVIE
(
  ID          INT            NOT NULL AUTO_INCREMENT,
  NAME        NVARCHAR(100)  NULL,
  DESCRIPTION NVARCHAR(1000) NULL,
  YEAR        INT            NULL,
  DURATION    INT            NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE cinema.TIME_SLOT
(
  ID        INT          NOT NULL AUTO_INCREMENT,
  TIME_FROM NVARCHAR(20) NULL,
  TIME_TILL NVARCHAR(20) NULL,
  DURATION  INT          NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE cinema.SEAT
(
  ID     INT NOT NULL AUTO_INCREMENT,
  NUMBER INT NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE cinema.SHOWTIME
(
  ID           INT          NOT NULL AUTO_INCREMENT,
  DATE         NVARCHAR(10) NOT NULL,
  MOVIE_ID     INT          NOT NULL,
  TIME_SLOT_ID INT          NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (MOVIE_ID) REFERENCES cinema.MOVIE (ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (TIME_SLOT_ID) REFERENCES cinema.TIME_SLOT (ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE cinema.ORDER
(
  ID          INT          NOT NULL AUTO_INCREMENT,
  DATE        NVARCHAR(10) NOT NULL,
  USER_ID     INT          NOT NULL,
  SHOWTIME_ID INT          NOT NULL,
  SEAT_ID     INT          NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (USER_ID) REFERENCES cinema.USER (ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (SHOWTIME_ID) REFERENCES cinema.SHOWTIME (ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (SEAT_ID) REFERENCES cinema.SEAT (ID) ON DELETE CASCADE ON UPDATE CASCADE
);

